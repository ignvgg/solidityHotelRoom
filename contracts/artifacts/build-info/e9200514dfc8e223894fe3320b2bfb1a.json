{
	"id": "e9200514dfc8e223894fe3320b2bfb1a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.1",
	"solcLongVersion": "0.6.1+commit.e6f7d5a4",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/HotelRoom.sol": {
				"content": "pragma solidity ^0.6.0;\r\n\r\ncontract HotelRoom {\r\n    \r\n    enum Statuses { Vacant, Occupied }\r\n    Statuses currentStatus;\r\n\r\n    address payable public owner;\r\n    // This address will get paid whenever a room is booked.\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        currentStatus = Statuses.Vacant;\r\n    }\r\n    // Ownership goes to the account deploying the SC.\r\n\r\n    function book() external payable onlyWhileVacant {\r\n        currentStatus = Statuses.Occupied;\r\n        owner.transfer(msg.value);\r\n    }\r\n    // Send ether to the owner with the transfer() function.\r\n    // Here msg.value refers to the amount of Ether sent in\r\n    // when the function is called.\r\n    // If the value passed into the require() function is true,\r\n    // then the function will resume execution. If it's false, \r\n    // then it will halt execution and throw an error.\r\n\r\n    modifier onlyWhileVacant {\r\n        require(currentStatus == Statuses.Vacant, \"Currently occupied.\");\r\n        _;\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/HotelRoom.sol": {
				"HotelRoom": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "book",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/HotelRoom.sol\":27:1009  contract HotelRoom {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/HotelRoom.sol\":229:329  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/HotelRoom.sol\":229:329  constructor() public {\r... */\n  pop\n    /* \"contracts/HotelRoom.sol\":269:279  msg.sender */\n  caller\n    /* \"contracts/HotelRoom.sol\":261:266  owner */\n  0x00\n  0x01\n    /* \"contracts/HotelRoom.sol\":261:279  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HotelRoom.sol\":306:321  Statuses.Vacant */\n  0x00\n    /* \"contracts/HotelRoom.sol\":290:303  currentStatus */\n  dup1\n  0x00\n    /* \"contracts/HotelRoom.sol\":290:321  currentStatus = Statuses.Vacant */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x01\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  invalid\ntag_4:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/HotelRoom.sol\":27:1009  contract HotelRoom {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/HotelRoom.sol\":27:1009  contract HotelRoom {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x05a8da72\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/HotelRoom.sol\":393:530  function book() external payable onlyWhileVacant {\r... */\n    tag_2:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n        /* \"contracts/HotelRoom.sol\":130:158  address payable public owner */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"contracts/HotelRoom.sol\":130:158  address payable public owner */\n      pop\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/HotelRoom.sol\":393:530  function book() external payable onlyWhileVacant {\r... */\n    tag_5:\n        /* \"contracts/HotelRoom.sol\":945:960  Statuses.Vacant */\n      0x00\n        /* \"contracts/HotelRoom.sol\":928:960  currentStatus == Statuses.Vacant */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_10\n      jumpi\n      invalid\n    tag_10:\n        /* \"contracts/HotelRoom.sol\":928:941  currentStatus */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/HotelRoom.sol\":928:960  currentStatus == Statuses.Vacant */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_11\n      jumpi\n      invalid\n    tag_11:\n      eq\n        /* \"contracts/HotelRoom.sol\":920:984  require(currentStatus == Statuses.Vacant, \"Currently occupied.\") */\n      tag_12\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43757272656e746c79206f636375706965642e00000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_12:\n        /* \"contracts/HotelRoom.sol\":469:486  Statuses.Occupied */\n      0x01\n        /* \"contracts/HotelRoom.sol\":453:466  currentStatus */\n      0x00\n      dup1\n        /* \"contracts/HotelRoom.sol\":453:486  currentStatus = Statuses.Occupied */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x01\n      dup2\n      gt\n      iszero\n      tag_14\n      jumpi\n      invalid\n    tag_14:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/HotelRoom.sol\":497:502  owner */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HotelRoom.sol\":497:511  owner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/HotelRoom.sol\":497:522  owner.transfer(msg.value) */\n      0x08fc\n        /* \"contracts/HotelRoom.sol\":512:521  msg.value */\n      callvalue\n        /* \"contracts/HotelRoom.sol\":497:522  owner.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"contracts/HotelRoom.sol\":497:522  owner.transfer(msg.value) */\n      pop\n        /* \"contracts/HotelRoom.sol\":393:530  function book() external payable onlyWhileVacant {\r... */\n      jump\t// out\n        /* \"contracts/HotelRoom.sol\":130:158  address payable public owner */\n    tag_8:\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220899d83a20c53cec8e9b88ac18feed142c883151dbf7f0e5fd121b88ddad03eee64736f6c63430006010033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060006101000a81548160ff0219169083600181111561007057fe5b0217905550610213806100846000396000f3fe6080604052600436106100295760003560e01c806305a8da721461002e5780638da5cb5b14610038575b600080fd5b61003661008f565b005b34801561004457600080fd5b5061004d6101b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600181111561009c57fe5b6000809054906101000a900460ff1660018111156100b657fe5b14610129576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43757272656e746c79206f636375706965642e0000000000000000000000000081525060200191505060405180910390fd5b60016000806101000a81548160ff0219169083600181111561014757fe5b0217905550600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156101b4573d6000803e3d6000fd5b50565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea2646970667358221220899d83a20c53cec8e9b88ac18feed142c883151dbf7f0e5fd121b88ddad03eee64736f6c63430006010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x70 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x213 DUP1 PUSH2 0x84 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A8DA72 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9C JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB6 JUMPI INVALID JUMPDEST EQ PUSH2 0x129 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43757272656E746C79206F636375706965642E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x147 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 SWAP14 DUP4 LOG2 0xC MSTORE8 0xCE 0xC8 0xE9 0xB8 DUP11 0xC1 DUP16 0xEE 0xD1 TIMESTAMP 0xC8 DUP4 ISZERO SAR 0xBF PUSH32 0xE5FD121B88DDAD03EEE64736F6C634300060100330000000000000000000000 ",
							"sourceMap": "27:982:0:-:0;;;229:100;8:9:-1;5:2;;;30:1;27;20:12;5:2;229:100:0;269:10;261:5;;:18;;;;;;;;;;;;;;;;;;306:15;290:13;;:31;;;;;;;;;;;;;;;;;;;;;;;;27:982;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c806305a8da721461002e5780638da5cb5b14610038575b600080fd5b61003661008f565b005b34801561004457600080fd5b5061004d6101b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600181111561009c57fe5b6000809054906101000a900460ff1660018111156100b657fe5b14610129576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f43757272656e746c79206f636375706965642e0000000000000000000000000081525060200191505060405180910390fd5b60016000806101000a81548160ff0219169083600181111561014757fe5b0217905550600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156101b4573d6000803e3d6000fd5b50565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea2646970667358221220899d83a20c53cec8e9b88ac18feed142c883151dbf7f0e5fd121b88ddad03eee64736f6c63430006010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5A8DA72 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D PUSH2 0x1B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x9C JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xB6 JUMPI INVALID JUMPDEST EQ PUSH2 0x129 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43757272656E746C79206F636375706965642E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x147 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 SWAP14 DUP4 LOG2 0xC MSTORE8 0xCE 0xC8 0xE9 0xB8 DUP11 0xC1 DUP16 0xEE 0xD1 TIMESTAMP 0xC8 DUP4 ISZERO SAR 0xBF PUSH32 0xE5FD121B88DDAD03EEE64736F6C634300060100330000000000000000000000 ",
							"sourceMap": "27:982:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;393:137;;;:::i;:::-;;130:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;130:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;393:137;945:15;928:32;;;;;;;;:13;;;;;;;;;;;:32;;;;;;;;;920:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;469:17:::1;453:13;::::0;:33:::1;;;;;;;;;;;;;;;;;;;;;;;;497:5;;;;;;;;;;;:14;;:25;512:9;497:25;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;497:25:0;393:137::o:0;130:28::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "106200",
								"executionCost": "41956",
								"totalCost": "148156"
							},
							"external": {
								"book()": "infinite",
								"owner()": "1103"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 1009,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 27,
									"end": 1009,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 27,
									"end": 1009,
									"name": "MSTORE"
								},
								{
									"begin": 229,
									"end": 329,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 229,
									"end": 329,
									"name": "POP"
								},
								{
									"begin": 269,
									"end": 279,
									"name": "CALLER"
								},
								{
									"begin": 261,
									"end": 266,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 261,
									"end": 266,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "EXP"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "DUP2"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "SLOAD"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "DUP2"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "MUL"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "NOT"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "AND"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "SWAP1"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "DUP4"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "AND"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "MUL"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "OR"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "SWAP1"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "SSTORE"
								},
								{
									"begin": 261,
									"end": 279,
									"name": "POP"
								},
								{
									"begin": 306,
									"end": 321,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 290,
									"end": 303,
									"name": "DUP1"
								},
								{
									"begin": 290,
									"end": 303,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "EXP"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "SLOAD"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "MUL"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "NOT"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "AND"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "SWAP1"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "DUP4"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "GT"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "ISZERO"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "JUMPI"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "INVALID"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "JUMPDEST"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "MUL"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "OR"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "SWAP1"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "SSTORE"
								},
								{
									"begin": 290,
									"end": 321,
									"name": "POP"
								},
								{
									"begin": 27,
									"end": 1009,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1009,
									"name": "DUP1"
								},
								{
									"begin": 27,
									"end": 1009,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 1009,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1009,
									"name": "CODECOPY"
								},
								{
									"begin": 27,
									"end": 1009,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 1009,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220899d83a20c53cec8e9b88ac18feed142c883151dbf7f0e5fd121b88ddad03eee64736f6c63430006010033",
									".code": [
										{
											"begin": 27,
											"end": 1009,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "MSTORE"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "LT"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "SHR"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "PUSH",
											"value": "5A8DA72"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "EQ"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "JUMPI"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "JUMPDEST"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 1009,
											"name": "REVERT"
										},
										{
											"begin": 393,
											"end": 530,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 393,
											"end": 530,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 530,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 393,
											"end": 530,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 393,
											"end": 530,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 530,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 393,
											"end": 530,
											"name": "JUMPDEST"
										},
										{
											"begin": 393,
											"end": 530,
											"name": "STOP"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "JUMPDEST"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "POP"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "JUMPDEST"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "MLOAD"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "DUP1"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "DUP3"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "AND"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "AND"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "DUP2"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "MSTORE"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "ADD"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "SWAP2"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "POP"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "POP"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "MLOAD"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "DUP1"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "SWAP2"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "SUB"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "SWAP1"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "RETURN"
										},
										{
											"begin": 393,
											"end": 530,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 393,
											"end": 530,
											"name": "JUMPDEST"
										},
										{
											"begin": 945,
											"end": 960,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "GT"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "ISZERO"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "JUMPI"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "INVALID"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "JUMPDEST"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "DUP1"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "SWAP1"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "SLOAD"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "SWAP1"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "EXP"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "SWAP1"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "DIV"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 928,
											"end": 941,
											"name": "AND"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "DUP2"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "GT"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "ISZERO"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "JUMPI"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "INVALID"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "JUMPDEST"
										},
										{
											"begin": 928,
											"end": 960,
											"name": "EQ"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"value": "43757272656E746C79206F636375706965642E00000000000000000000000000"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 920,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 469,
											"end": 486,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 453,
											"end": 466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 453,
											"end": 466,
											"name": "DUP1"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "EXP"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "DUP2"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "SLOAD"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "DUP2"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "MUL"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "NOT"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "AND"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "DUP4"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "DUP2"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "GT"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "ISZERO"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "JUMPI"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "INVALID"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "JUMPDEST"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "MUL"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "OR"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "SSTORE"
										},
										{
											"begin": 453,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SLOAD"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "EXP"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "DIV"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 497,
											"end": 502,
											"name": "AND"
										},
										{
											"begin": 497,
											"end": 511,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 497,
											"end": 511,
											"name": "AND"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 512,
											"end": 521,
											"name": "CALLVALUE"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "DUP2"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "ISZERO"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "MUL"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "MLOAD"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "MLOAD"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "DUP1"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "DUP4"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "SUB"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "DUP2"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "DUP6"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "DUP9"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "DUP9"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "CALL"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "SWAP4"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 497,
											"end": 522,
											"name": "POP"
										},
										{
											"begin": 393,
											"end": 530,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "JUMPDEST"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "SWAP1"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "SLOAD"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "SWAP1"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "EXP"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "SWAP1"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "DIV"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "AND"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "DUP2"
										},
										{
											"begin": 130,
											"end": 158,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"book()": "05a8da72",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"book\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/HotelRoom.sol\":\"HotelRoom\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/HotelRoom.sol\":{\"keccak256\":\"0x1ab99dc182febcd52c3ac6f5f06fd5636e573e4b679671511e560695a09f71f3\",\"urls\":[\"bzz-raw://1eaa7bd32f6e05832375250a9584df4ba01bafc854fa77c57c3325e3a02c182f\",\"dweb:/ipfs/QmbobLewobex5ZMFfy59GPbAeaKxfKxBPCGdJEKH7pXyQi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "contracts/HotelRoom.sol:HotelRoom",
								"label": "currentStatus",
								"offset": 0,
								"slot": "0",
								"type": "t_enum(Statuses)4"
							},
							{
								"astId": 8,
								"contract": "contracts/HotelRoom.sol:HotelRoom",
								"label": "owner",
								"offset": 1,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_enum(Statuses)4": {
								"encoding": "inplace",
								"label": "enum HotelRoom.Statuses",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/HotelRoom.sol": {
				"ast": {
					"absolutePath": "contracts/HotelRoom.sol",
					"exportedSymbols": {
						"HotelRoom": [
							53
						]
					},
					"id": 54,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 53,
							"linearizedBaseContracts": [
								53
							],
							"name": "HotelRoom",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "HotelRoom.Statuses",
									"id": 4,
									"members": [
										{
											"id": 2,
											"name": "Vacant",
											"nodeType": "EnumValue",
											"src": "75:6:0"
										},
										{
											"id": 3,
											"name": "Occupied",
											"nodeType": "EnumValue",
											"src": "83:8:0"
										}
									],
									"name": "Statuses",
									"nodeType": "EnumDefinition",
									"src": "59:34:0"
								},
								{
									"constant": false,
									"id": 6,
									"name": "currentStatus",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 53,
									"src": "99:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Statuses_$4",
										"typeString": "enum HotelRoom.Statuses"
									},
									"typeName": {
										"contractScope": null,
										"id": 5,
										"name": "Statuses",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 4,
										"src": "99:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Statuses_$4",
											"typeString": "enum HotelRoom.Statuses"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 8,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 53,
									"src": "130:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "130:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "250:79:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 11,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "261:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 12,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "269:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "269:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "261:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "261:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 16,
														"name": "currentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "290:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Statuses_$4",
															"typeString": "enum HotelRoom.Statuses"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 17,
															"name": "Statuses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "306:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Statuses_$4_$",
																"typeString": "type(enum HotelRoom.Statuses)"
															}
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Vacant",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "306:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Statuses_$4",
															"typeString": "enum HotelRoom.Statuses"
														}
													},
													"src": "290:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Statuses_$4",
														"typeString": "enum HotelRoom.Statuses"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "290:31:0"
											}
										]
									},
									"documentation": null,
									"id": 22,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "240:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "250:0:0"
									},
									"scope": 53,
									"src": "229:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "442:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 27,
														"name": "currentStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "453:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Statuses_$4",
															"typeString": "enum HotelRoom.Statuses"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 28,
															"name": "Statuses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "469:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Statuses_$4_$",
																"typeString": "type(enum HotelRoom.Statuses)"
															}
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Occupied",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "469:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Statuses_$4",
															"typeString": "enum HotelRoom.Statuses"
														}
													},
													"src": "453:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Statuses_$4",
														"typeString": "enum HotelRoom.Statuses"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "453:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 35,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "512:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "512:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 32,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "497:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "497:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "497:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "497:25:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "05a8da72",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 25,
											"modifierName": {
												"argumentTypes": null,
												"id": 24,
												"name": "onlyWhileVacant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 52,
												"src": "426:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "426:15:0"
										}
									],
									"name": "book",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:0:0"
									},
									"scope": 53,
									"src": "393:137:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "909:95:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_Statuses_$4",
																"typeString": "enum HotelRoom.Statuses"
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 43,
																"name": "currentStatus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "928:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Statuses_$4",
																	"typeString": "enum HotelRoom.Statuses"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 44,
																	"name": "Statuses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "945:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Statuses_$4_$",
																		"typeString": "type(enum HotelRoom.Statuses)"
																	}
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Vacant",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "945:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Statuses_$4",
																	"typeString": "enum HotelRoom.Statuses"
																}
															},
															"src": "928:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43757272656e746c79206f636375706965642e",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "962:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b6aeac19bf4f6ba40c9ef04b9868e99180e1501d43e8d65e4ada5c109c9bf4ac",
																"typeString": "literal_string \"Currently occupied.\""
															},
															"value": "Currently occupied."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b6aeac19bf4f6ba40c9ef04b9868e99180e1501d43e8d65e4ada5c109c9bf4ac",
																"typeString": "literal_string \"Currently occupied.\""
															}
														],
														"id": 42,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															71,
															72
														],
														"referencedDeclaration": 72,
														"src": "920:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "920:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "920:64:0"
											},
											{
												"id": 50,
												"nodeType": "PlaceholderStatement",
												"src": "995:1:0"
											}
										]
									},
									"documentation": null,
									"id": 52,
									"name": "onlyWhileVacant",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "909:0:0"
									},
									"src": "884:120:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 54,
							"src": "27:982:0"
						}
					],
					"src": "0:1009:0"
				},
				"id": 0
			}
		}
	}
}